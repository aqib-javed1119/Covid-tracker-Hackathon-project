{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\invis\\\\Documents\\\\College Stuff\\\\2021 CUNY Hackathon\\\\covid-tracker\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport Columns from \"react-columns\";\nimport Form from \"react-bootstrap/Form\";\nimport NumberFormat from \"react-number-format\";\nimport ReactTooltip from \"react-tooltip\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport Toggle from \"react-toggle\";\nimport \"react-toggle/style.css\";\n\nfunction Home() {\n  _s();\n\n  const [latest, setLatest] = useState([]);\n  const [results, setResults] = useState([]);\n  const [searchCountries, setSearchCountries] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [darkTheme, setDarkTheme] = useState(false);\n  useEffect(() => {\n    axios.all([axios.get(\"https://corona.lmao.ninja/v2/all\"), axios.get(\"https://corona.lmao.ninja/v2/countries\")]).then(responseArr => {\n      setLatest(responseArr[0].data);\n      setResults(responseArr[1].data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n  const filterCountries = results.filter(item => {\n    return searchCountries !== \"\" ? item.country.toLowerCase().includes(searchCountries.toLowerCase()) : item;\n  });\n  const countries = filterCountries.map((data, i) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      bg: darkTheme ? \"dark\" : \"light\",\n      text: darkTheme ? \"light\" : \"dark\",\n      className: \"text-center\",\n      style: {\n        margin: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: data.countryInfo.flag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: data.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Cases \", data.cases]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Deaths \", data.deaths]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Recovered \", data.recovered]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Today's cases \", data.todayCases]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Today's deaths \", data.todayDeaths]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Active \", data.active]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Critical \", data.critical]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  });\n  var queries = [{\n    columns: 2,\n    query: \"min-width: 500px\"\n  }, {\n    columns: 3,\n    query: \"min-width: 1000px\"\n  }];\n\n  const handleDarkThemeChange = () => {\n    setDarkTheme(!darkTheme);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: darkTheme ? \"black\" : \"white\",\n      color: darkTheme ? \"white\" : \"black\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(RingLoader, {\n        size: 50,\n        color: \"green\",\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      \"data-tip\": \"Last modified date: 16/05/2020 - v2.2\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"COVID-19 Live Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n      effect: \"solid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Toggle, {\n        defaultChecked: false,\n        icons: {\n          checked: \"ðŸŒœ\",\n          unchecked: \"ðŸŒž\"\n        },\n        onChange: handleDarkThemeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardDeck, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        bg: \"secondary\",\n        text: \"white\",\n        className: \"text-center\",\n        style: {\n          margin: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NumberFormat, {\n            value: latest.cases,\n            displayType: \"text\",\n            thousandSeparator: true,\n            style: {\n              fontSize: \"30px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Last updated \", lastUpdated]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"danger\",\n        text: \"white\",\n        className: \"text-center\",\n        style: {\n          margin: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Deaths\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(NumberFormat, {\n              value: latest.deaths,\n              displayType: \"text\",\n              thousandSeparator: true,\n              style: {\n                fontSize: \"30px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Last updated \", lastUpdated]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"success\",\n        text: \"white\",\n        className: \"text-center\",\n        style: {\n          margin: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Recovered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(NumberFormat, {\n              value: latest.recovered,\n              displayType: \"text\",\n              thousandSeparator: true,\n              style: {\n                fontSize: \"30px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Last updated \", lastUpdated]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formGroupSearch\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          bg: \"dark\",\n          type: \"text\",\n          placeholder: \"Search for countries\",\n          onChange: e => setSearchCountries(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Columns, {\n      queries: queries,\n      children: countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"n00aeOwKECS497mfKazXL0IYe48=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/invis/Documents/College Stuff/2021 CUNY Hackathon/covid-tracker/src/pages/Home.js"],"names":["React","useEffect","useState","Card","CardDeck","axios","Columns","Form","NumberFormat","ReactTooltip","RingLoader","Toggle","Home","latest","setLatest","results","setResults","searchCountries","setSearchCountries","loading","setLoading","darkTheme","setDarkTheme","all","get","then","responseArr","data","catch","err","console","log","date","Date","parseInt","updated","lastUpdated","toString","filterCountries","filter","item","country","toLowerCase","includes","countries","map","i","margin","countryInfo","flag","cases","deaths","recovered","todayCases","todayDeaths","active","critical","queries","columns","query","handleDarkThemeChange","backgroundColor","color","display","justifyContent","textAlign","checked","unchecked","fontSize","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,wBAAP;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CACFkB,GADH,CACO,CACHlB,KAAK,CAACmB,GAAN,CAAU,kCAAV,CADG,EAEHnB,KAAK,CAACmB,GAAN,CAAU,wCAAV,CAFG,CADP,EAKGC,IALH,CAKSC,WAAD,IAAiB;AACrBZ,MAAAA,SAAS,CAACY,WAAW,CAAC,CAAD,CAAX,CAAeC,IAAhB,CAAT;AACAX,MAAAA,UAAU,CAACU,WAAW,CAAC,CAAD,CAAX,CAAeC,IAAhB,CAAV;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KATH,EAUGQ,KAVH,CAUUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAZH;AAaD,GAdQ,EAcN,EAdM,CAAT;AAgBA,QAAMG,IAAI,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAACrB,MAAM,CAACsB,OAAR,CAAjB,CAAb;AACA,QAAMC,WAAW,GAAGJ,IAAI,CAACK,QAAL,EAApB;AAEA,QAAMC,eAAe,GAAGvB,OAAO,CAACwB,MAAR,CAAgBC,IAAD,IAAU;AAC/C,WAAOvB,eAAe,KAAK,EAApB,GACHuB,IAAI,CAACC,OAAL,CAAaC,WAAb,GAA2BC,QAA3B,CAAoC1B,eAAe,CAACyB,WAAhB,EAApC,CADG,GAEHF,IAFJ;AAGD,GAJuB,CAAxB;AAMA,QAAMI,SAAS,GAAGN,eAAe,CAACO,GAAhB,CAAoB,CAAClB,IAAD,EAAOmB,CAAP,KAAa;AACjD,wBACE,QAAC,IAAD;AAEE,MAAA,EAAE,EAAEzB,SAAS,GAAG,MAAH,GAAY,OAF3B;AAGE,MAAA,IAAI,EAAEA,SAAS,GAAG,OAAH,GAAa,MAH9B;AAIE,MAAA,SAAS,EAAC,aAJZ;AAKE,MAAA,KAAK,EAAE;AAAE0B,QAAAA,MAAM,EAAE;AAAV,OALT;AAAA,8BAOE,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,KAAlB;AAAwB,QAAA,GAAG,EAAEpB,IAAI,CAACqB,WAAL,CAAiBC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAatB,IAAI,CAACc;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,+BAAkBd,IAAI,CAACuB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD,CAAM,IAAN;AAAA,gCAAmBvB,IAAI,CAACwB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,IAAD,CAAM,IAAN;AAAA,mCAAsBxB,IAAI,CAACyB,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,uCAA0BzB,IAAI,CAAC0B,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,IAAD,CAAM,IAAN;AAAA,wCAA2B1B,IAAI,CAAC2B,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAA,gCAAmB3B,IAAI,CAAC4B,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,IAAD,CAAM,IAAN;AAAA,kCAAqB5B,IAAI,CAAC6B,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA,OACOV,CADP;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD,GAtBiB,CAAlB;AAwBA,MAAIW,OAAO,GAAG,CACZ;AACEC,IAAAA,OAAO,EAAE,CADX;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADY,EAKZ;AACED,IAAAA,OAAO,EAAE,CADX;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALY,CAAd;;AAWA,QAAMC,qBAAqB,GAAG,MAAM;AAClCtC,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,KAAK,EAAE;AACLwC,MAAAA,eAAe,EAAExC,SAAS,GAAG,OAAH,GAAa,OADlC;AAELyC,MAAAA,KAAK,EAAEzC,SAAS,GAAG,OAAH,GAAa;AAFxB,KADT;AAAA,4BAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAK,MAAA,KAAK,EAAE;AAAE0C,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAZ;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE,EAAlB;AAAsB,QAAA,KAAK,EAAE,OAA7B;AAAsC,QAAA,OAAO,EAAE7C;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AACE,kBAAS,uCADX;AAEE,MAAA,KAAK,EAAE;AAAE8C,QAAAA,SAAS,EAAE;AAAb,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAiBE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YAjBF,eAkBE;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,cAAc,EAAE,KADlB;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,SAAS,EAAE;AAFN,SAFT;AAME,QAAA,QAAQ,EAAEP;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF,eA6BE;AAAA;AAAA;AAAA;AAAA,YA7BF,eA8BE,QAAC,QAAD;AAAA,8BACE,QAAC,IAAD;AACE,QAAA,EAAE,EAAC,WADL;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,EAAC,aAHZ;AAIE,QAAA,KAAK,EAAE;AAAEb,UAAAA,MAAM,EAAE;AAAV,SAJT;AAAA,gCAME,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,QAAC,YAAD;AACE,YAAA,KAAK,EAAElC,MAAM,CAACqC,KADhB;AAEE,YAAA,WAAW,EAAE,MAFf;AAGE,YAAA,iBAAiB,EAAE,IAHrB;AAIE,YAAA,KAAK,EAAE;AAAEkB,cAAAA,QAAQ,EAAE;AAAZ;AAJT;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAgBE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE;AAAA,wCAAqBhC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAqBE,QAAC,IAAD;AACE,QAAA,EAAE,EAAC,QADL;AAEE,QAAA,IAAI,EAAE,OAFR;AAGE,QAAA,SAAS,EAAC,aAHZ;AAIE,QAAA,KAAK,EAAE;AAAEW,UAAAA,MAAM,EAAE;AAAV,SAJT;AAAA,gCAME,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,uBACG,GADH,eAEE,QAAC,YAAD;AACE,cAAA,KAAK,EAAElC,MAAM,CAACsC,MADhB;AAEE,cAAA,WAAW,EAAE,MAFf;AAGE,cAAA,iBAAiB,EAAE,IAHrB;AAIE,cAAA,KAAK,EAAE;AAAEiB,gBAAAA,QAAQ,EAAE;AAAZ;AAJT;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAkBE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE;AAAA,wCAAqBhC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eA2CE,QAAC,IAAD;AACE,QAAA,EAAE,EAAC,SADL;AAEE,QAAA,IAAI,EAAE,OAFR;AAGE,QAAA,SAAS,EAAC,aAHZ;AAIE,QAAA,KAAK,EAAE;AAAEW,UAAAA,MAAM,EAAE;AAAV,SAJT;AAAA,gCAME,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,uBACG,GADH,eAEE,QAAC,YAAD;AACE,cAAA,KAAK,EAAElC,MAAM,CAACuC,SADhB;AAEE,cAAA,WAAW,EAAE,MAFf;AAGE,cAAA,iBAAiB,EAAE,IAHrB;AAIE,cAAA,KAAK,EAAE;AAAEgB,gBAAAA,QAAQ,EAAE;AAAZ;AAJT;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAkBE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE;AAAA,wCAAqBhC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF,eAgGE;AAAA;AAAA;AAAA;AAAA,YAhGF,eAiGE,QAAC,IAAD;AAAA,6BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA,+BACE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,EAAE,EAAC,MADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,sBAHd;AAIE,UAAA,QAAQ,EAAGiC,CAAD,IAAOnD,kBAAkB,CAACmD,CAAC,CAACC,MAAF,CAASC,KAAV;AAJrC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjGF,eA2GE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEd,OAAlB;AAAA,gBAA4Bb;AAA5B;AAAA;AAAA;AAAA;AAAA,YA3GF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+GD;;GAtLQhC,I;;KAAAA,I;AAwLT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport Columns from \"react-columns\";\nimport Form from \"react-bootstrap/Form\";\nimport NumberFormat from \"react-number-format\";\nimport ReactTooltip from \"react-tooltip\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport Toggle from \"react-toggle\";\nimport \"react-toggle/style.css\";\n\nfunction Home() {\n  const [latest, setLatest] = useState([]);\n  const [results, setResults] = useState([]);\n  const [searchCountries, setSearchCountries] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [darkTheme, setDarkTheme] = useState(false);\n\n  useEffect(() => {\n    axios\n      .all([\n        axios.get(\"https://corona.lmao.ninja/v2/all\"),\n        axios.get(\"https://corona.lmao.ninja/v2/countries\"),\n      ])\n      .then((responseArr) => {\n        setLatest(responseArr[0].data);\n        setResults(responseArr[1].data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n\n  const filterCountries = results.filter((item) => {\n    return searchCountries !== \"\"\n      ? item.country.toLowerCase().includes(searchCountries.toLowerCase())\n      : item;\n  });\n\n  const countries = filterCountries.map((data, i) => {\n    return (\n      <Card\n        key={i}\n        bg={darkTheme ? \"dark\" : \"light\"}\n        text={darkTheme ? \"light\" : \"dark\"}\n        className=\"text-center\"\n        style={{ margin: \"10px\" }}\n      >\n        <Card.Img variant=\"top\" src={data.countryInfo.flag} />\n        <Card.Body>\n          <Card.Title>{data.country}</Card.Title>\n          <Card.Text>Cases {data.cases}</Card.Text>\n          <Card.Text>Deaths {data.deaths}</Card.Text>\n          <Card.Text>Recovered {data.recovered}</Card.Text>\n          <Card.Text>Today's cases {data.todayCases}</Card.Text>\n          <Card.Text>Today's deaths {data.todayDeaths}</Card.Text>\n          <Card.Text>Active {data.active}</Card.Text>\n          <Card.Text>Critical {data.critical}</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  });\n\n  var queries = [\n    {\n      columns: 2,\n      query: \"min-width: 500px\",\n    },\n    {\n      columns: 3,\n      query: \"min-width: 1000px\",\n    },\n  ];\n\n  const handleDarkThemeChange = () => {\n    setDarkTheme(!darkTheme);\n  };\n\n  return (\n    <div\n      style={{\n        backgroundColor: darkTheme ? \"black\" : \"white\",\n        color: darkTheme ? \"white\" : \"black\",\n      }}\n    >\n      <br />\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <RingLoader size={50} color={\"green\"} loading={loading} />\n      </div>\n      <br />\n      <h2\n        data-tip=\"Last modified date: 16/05/2020 - v2.2\"\n        style={{ textAlign: \"center\" }}\n      >\n        COVID-19 Live Now\n      </h2>\n      <ReactTooltip effect=\"solid\" />\n      <br />\n      <div style={{ textAlign: \"center\" }}>\n        <Toggle\n          defaultChecked={false}\n          icons={{\n            checked: \"ðŸŒœ\",\n            unchecked: \"ðŸŒž\",\n          }}\n          onChange={handleDarkThemeChange}\n        />\n      </div>\n      <br />\n      <CardDeck>\n        <Card\n          bg=\"secondary\"\n          text=\"white\"\n          className=\"text-center\"\n          style={{ margin: \"10px\" }}\n        >\n          <Card.Body>\n            <Card.Title>Cases</Card.Title>\n            {/* <Card.Text>{latest.cases}</Card.Text> */}\n            <NumberFormat\n              value={latest.cases}\n              displayType={\"text\"}\n              thousandSeparator={true}\n              style={{ fontSize: \"30px\" }}\n            />\n          </Card.Body>\n          <Card.Footer>\n            <small>Last updated {lastUpdated}</small>\n          </Card.Footer>\n        </Card>\n        <Card\n          bg=\"danger\"\n          text={\"white\"}\n          className=\"text-center\"\n          style={{ margin: \"10px\" }}\n        >\n          <Card.Body>\n            <Card.Title>Deaths</Card.Title>\n            <Card.Text>\n              {\" \"}\n              <NumberFormat\n                value={latest.deaths}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                style={{ fontSize: \"30px\" }}\n              />\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <small>Last updated {lastUpdated}</small>\n          </Card.Footer>\n        </Card>\n        <Card\n          bg=\"success\"\n          text={\"white\"}\n          className=\"text-center\"\n          style={{ margin: \"10px\" }}\n        >\n          <Card.Body>\n            <Card.Title>Recovered</Card.Title>\n            <Card.Text>\n              {\" \"}\n              <NumberFormat\n                value={latest.recovered}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                style={{ fontSize: \"30px\" }}\n              />\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <small>Last updated {lastUpdated}</small>\n          </Card.Footer>\n        </Card>\n      </CardDeck>\n      <br />\n      <Form>\n        <Form.Group controlId=\"formGroupSearch\">\n          <Form.Control\n            bg=\"dark\"\n            type=\"text\"\n            placeholder=\"Search for countries\"\n            onChange={(e) => setSearchCountries(e.target.value)}\n          />\n        </Form.Group>\n      </Form>\n      <Columns queries={queries}>{countries}</Columns>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}